#!/usr/bin/env bash
set -eu
source hooks/.config

# echo "⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯"
# echo "Registering qemu-*-static for all supported processors except current"
# docker run --rm --privileged multiarch/qemu-user-static:register --reset

# Pull manifest of the repository in the first FROM stage line
# We need to figure out the digest hashes for each architecture
# so that we can pull the correct images
echo "⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯"
echo "Creating Dockerfiles for architectures: ${ARCHITECTURES_TO_BUILD[*]}"

if [ -z "${BASE_IMAGE_REPO+x}" ]; then
    BASE_IMAGE_REPO=`cat ${DOCKERFILE_PATH} | sed -ne 's/.*FROM\s*\(.*\):.*/\1/p' | sed 's/\\r//g'`
fi

if [ -z "${BASE_IMAGE_TAG+x}" ]; then
    BASE_IMAGE_TAG=`cat ${DOCKERFILE_PATH} | sed -ne 's/^.*:\(.*\)/\1/p' | sed 's/\\r//g'`
fi

BASE_IMAGE_NAME="${BASE_IMAGE_REPO}:${BASE_IMAGE_TAG}"
MANIFEST_FILE="${PWD}/manifest-$(echo ${BASE_IMAGE_NAME} | sed -e 's/[^A-Za-z0-9._-]/_/g').json"

if [ ! -f "${MANIFEST_FILE}" ] || ! grep -q '[^[:space:]]' < ${MANIFEST_FILE} || test `find "${MANIFEST_FILE}" -mmin +60 &> /dev/null`; then
    echo "Fetching manifest for ${BASE_IMAGE_NAME}"
    echo "$(docker manifest inspect ${BASE_IMAGE_NAME})" > ${MANIFEST_FILE}
fi

# Generate separate Dockerfile for each architecture
MANIFEST_COUNT=`jq '.manifests | length' ${MANIFEST_FILE}`
if [ "${MANIFEST_COUNT}" != "" ] && [ "${MANIFEST_COUNT}" -gt "0" ]; then
    ((MANIFEST_COUNT=MANIFEST_COUNT-1))

    for ((i = 0; i <= ${MANIFEST_COUNT}; i++)); do
        for ARCH in ${ARCHITECTURES_TO_BUILD[@]}; do
            if \
                [ "$(jq -r '.manifests['$i'].platform.os' ${MANIFEST_FILE})" == "linux" ] && \
                [ "$(jq -r '.manifests['$i'].platform.architecture' ${MANIFEST_FILE})" == "${manifest_architecture_map[${ARCH}]}" ] \
            ; then
                echo "Generating ${DOCKERFILE_PATH}_${ARCH}"

                DIGEST="$(jq -r '.manifests['$i'].digest' ${MANIFEST_FILE})"
                sed 's~'${BASE_IMAGE_NAME}'~&@'${DIGEST}'~g' < ${DOCKERFILE_PATH} > ${DOCKERFILE_PATH}_${ARCH}
            fi
        done
    done
else
    echo "Couldn't read the manifest for ${BASE_IMAGE_NAME}"
    exit 1
fi

echo "⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯"
echo "Current working directory: ${PWD}"
ls -al

echo "⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯"
echo "Build variables: (see https://docs.docker.com/docker-hub/builds/advanced/)"
echo "SOURCE_BRANCH:   ${SOURCE_BRANCH}"
echo "SOURCE_COMMIT:   ${SOURCE_COMMIT}"
echo "COMMIT_MSG:      ${COMMIT_MSG}"
echo "DOCKERFILE_PATH: ${DOCKERFILE_PATH}"
echo "DOCKER_REPO:     ${DOCKER_REPO}"
echo "DOCKER_TAG:      ${DOCKER_TAG}"
echo "IMAGE_NAME:      ${IMAGE_NAME}"
